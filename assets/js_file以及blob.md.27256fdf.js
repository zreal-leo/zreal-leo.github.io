import{_ as s,c as a,o as n,d as l}from"./app.38b01d5e.js";const b=JSON.parse('{"title":"file 以及 blob","description":"","frontmatter":{},"headers":[{"level":2,"title":"File","slug":"file","link":"#file","children":[]},{"level":2,"title":"Blob","slug":"blob","link":"#blob","children":[]}],"relativePath":"js/file以及blob.md"}'),e={name:"js/file以及blob.md"},p=l(`<h1 id="file-以及-blob" tabindex="-1">file 以及 blob <a class="header-anchor" href="#file-以及-blob" aria-hidden="true">#</a></h1><h2 id="file" tabindex="-1">File <a class="header-anchor" href="#file" aria-hidden="true">#</a></h2><p>File API 提供了浏览器操作计算机中文件的能力</p><p>File API 依然以表单中的 file 类型输入框作为基础，即<code><input type="file"></code></p><p>File API 还提供了一个 FileReader 类型，FileReader 类型具有以下四种方法</p><ul><li>readAsText(file[, encoding]) 读取纯文本内容，并保存在 result 中，第二个可选参数是表示编码</li><li>readAsDataURL(file) 读取文件并将内容的数据 URL 保存在 result 中</li><li>readAsBinaryString(file) 读取文件并将每个字符的二进制数据都保存在 result 中</li><li>readAsArrayBuffer(file) 读取文件并将文件内容已 ArrayBuffer 的形式保存在 result 中</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fileInput </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">fileInput</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">change</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">files</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">files</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">reader</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">FileReader</span><span style="color:#F07178;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readAsDataURL</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">files</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 读取文件失败</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onerror</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 读取文件中</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onprogress</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 读取文件完成</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onload</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>如果文件内容是一张图片，则用 readAsDataURL 读取到的 reader.result 直接可以被 img 标签使用，如果文件内容是文本，则可以使用 readAsText 直接读取内容，看<a href="https://codepen.io/zreal-leo/pen/JjKdQbo" target="_blank" rel="noreferrer">demo</a></p><h2 id="blob" tabindex="-1">Blob <a class="header-anchor" href="#blob" aria-hidden="true">#</a></h2><p>在某种情况下，可能需要读取部分文件而不是整个文件，这时我们就可以使用 Blob 类型，</p><p>我们可以使用<code> new Blob(array[, options])</code> 来创建一个新的 Blob 对象</p><ul><li>array 是一个由<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer"><code>ArrayBuffer</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/ArrayBufferView" target="_blank" rel="noreferrer"><code>ArrayBufferView</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="noreferrer"><code>Blob</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DOMString" target="_blank" rel="noreferrer"><code>DOMString</code></a> 等对象构成的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Array" target="_blank" rel="noreferrer"><code>Array</code></a> ，或者其他类似对象的混合体，它将会被放进 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="noreferrer"><code>Blob</code></a>。DOMStrings 会被编码为 UTF-8。</li><li>options 可以传入 type 类型， 比如 <strong>{ type: &#39;application/json&#39; }</strong></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> blob </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Blob</span><span style="color:#A6ACCD;">([files[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]])</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 截取前 32 个字节</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> blobSlice </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> blob</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readAsText</span><span style="color:#A6ACCD;">(blobSlice)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><a href="https://codepen.io/zreal-leo/pen/MWewNvK?__cf_chl_jschl_tk__=b70ec993a227d3560eefb588e8cf48f56b558f60-1602519724-0-ATl8rVC1j1so9Q0DMcWPkVRte1nIeUJoWYKo1KfJD4rpTGVVPvBT9CxikJu-1JhvTIqaSY0YH50k5n4flkjduHKQ7GWqgI-a346iCzUXTN92gWQjQDhn35sVyTM0j8dNexqWHNF8_JDlbE27jN_m98VTCK9XAfWjTr8_eZwzGuCMcU-1DjdlptXVkIOk3YMu07Pz2yxRCk798JU5Dnc6swH7MWBV5RVPHDGWCuVJc0PAq_QbSowwJzouWGbE3Ig0t6cshW4d9IggdLTP3jsB0cYnOVaPjkMzPI6U9feoFUW4kRpWGoqOyrSs0H5tsPzLNkqKcZ6tcvGfGvICA0Q7T_Q" target="_blank" rel="noreferrer">查看栗子</a></p>`,14),o=[p];function r(t,c,i,y,F,D){return n(),a("div",null,o)}const C=s(e,[["render",r]]);export{b as __pageData,C as default};
