import{_ as s,c as n,o as e,d as a}from"./app.38b01d5e.js";const h=JSON.parse('{"title":"生命周期","description":"","frontmatter":{},"headers":[{"level":2,"title":"创建实例","slug":"创建实例","link":"#创建实例","children":[{"level":3,"title":"init Events & lifeCycle","slug":"init-events-lifecycle","link":"#init-events-lifecycle","children":[]},{"level":3,"title":"执行 beforeCreate","slug":"执行-beforecreate","link":"#执行-beforecreate","children":[]},{"level":3,"title":"init Injections & reactivity","slug":"init-injections-reactivity","link":"#init-injections-reactivity","children":[]},{"level":3,"title":"执行 created","slug":"执行-created","link":"#执行-created","children":[]},{"level":3,"title":"compile","slug":"compile","link":"#compile","children":[]},{"level":3,"title":"执行 beforeMount","slug":"执行-beforemount","link":"#执行-beforemount","children":[]},{"level":3,"title":"执行 mounted","slug":"执行-mounted","link":"#执行-mounted","children":[]},{"level":3,"title":"执行 beforeUnmount","slug":"执行-beforeunmount","link":"#执行-beforeunmount","children":[]},{"level":3,"title":"执行 unmounted","slug":"执行-unmounted","link":"#执行-unmounted","children":[]}]}],"relativePath":"vue/生命周期.md"}'),l={name:"vue/生命周期.md"},p=a(`<h1 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-hidden="true">#</a></h1><p>直接先放上 vue 官网上拿来的生命周期图</p><p><img src="https://v3.cn.vuejs.org/images/lifecycle.png" alt="生命周期"></p><h2 id="创建实例" tabindex="-1">创建实例 <a class="header-anchor" href="#创建实例" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createApp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> App </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./App.vue</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">createApp</span><span style="color:#A6ACCD;">(App)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>以 APP 作为根组件，并挂载在 #app 这个 DOM 上。自此，组件的生命周期正式开始。</p><h3 id="init-events-lifecycle" tabindex="-1">init Events &amp; lifeCycle <a class="header-anchor" href="#init-events-lifecycle" aria-hidden="true">#</a></h3><p>初始化组件的 Events ，Events 包括（on，emit，off）以及生命周期</p><h3 id="执行-beforecreate" tabindex="-1">执行 beforeCreate <a class="header-anchor" href="#执行-beforecreate" aria-hidden="true">#</a></h3><h3 id="init-injections-reactivity" tabindex="-1">init Injections &amp; reactivity <a class="header-anchor" href="#init-injections-reactivity" aria-hidden="true">#</a></h3><p>初始化父组件对当前组件的 props，此时，已经能访问到父组件的 props 了。</p><p>初始化计算属性、methods 方法</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 一个组件，此时它正作为子组件</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> String </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">watch</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">handler</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 此时能拿到值</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">immerdiate</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="执行-created" tabindex="-1">执行 created <a class="header-anchor" href="#执行-created" aria-hidden="true">#</a></h3><h3 id="compile" tabindex="-1">compile <a class="header-anchor" href="#compile" aria-hidden="true">#</a></h3><p>执行编译过程，会检测有没有 <b>template</b> 字段。如果有，则编译 template 的内容，否则编译 el 中的 innerHTML</p><h3 id="执行-beforemount" tabindex="-1">执行 beforeMount <a class="header-anchor" href="#执行-beforemount" aria-hidden="true">#</a></h3><p>如果组件中存在着子组件，那么接着执行子组件的生命周期，直至所有子组件都 mounted 完为止</p><h3 id="执行-mounted" tabindex="-1">执行 mounted <a class="header-anchor" href="#执行-mounted" aria-hidden="true">#</a></h3><p>此时才能访问到 DOM 节点</p><p>此时，如果 data 发生改变，就会先执行 <strong>beforeUpdate</strong> 生命周期，执行时视图并未发生改变。继而重新渲染虚拟 DOM，执行 <strong>updated</strong> ，直至此时，视图层才会更新</p><h3 id="执行-beforeunmount" tabindex="-1">执行 beforeUnmount <a class="header-anchor" href="#执行-beforeunmount" aria-hidden="true">#</a></h3><p>当 beforeUnmount 钩子函数执行完毕之后，就开始移除事件监听，子组件等等</p><h3 id="执行-unmounted" tabindex="-1">执行 unmounted <a class="header-anchor" href="#执行-unmounted" aria-hidden="true">#</a></h3><p>自此，组件的生命周期已经结束。</p>`,25),t=[p];function o(r,c,i,d,y,u){return e(),n("div",null,t)}const F=s(l,[["render",o]]);export{h as __pageData,F as default};
